export const extensions: IconMap = {
  angular: ['ng-template'],
  bash: ['bash', 'sh', 'awk'],
  bat: ['bat'],
  c: ['c', 'i', 'mi'],
  certificate: ['cer', 'cert', 'crt', 'pfx'],
  clojure: ['clj', 'cljs', 'cljc'],
  coffee: ['coffee', 'cson', 'iced'],
  csharp: ['cs', 'csx'],
  cpp: ['cc', 'cpp', 'cxx', 'c++', 'cp', 'mm', 'mii', 'ii'],
  cucumber: ['feature', 'features'],
  cuda: ['cu', 'cuh'],
  dart: ['dart'],
  database: [
    'pdb',
    'sql',
    'pks',
    'pkb',
    'accdb',
    'mdb',
    'sqlite',
    'sqlite3',
    'pgsql',
    'postgres',
    'psql',
    'db',
    'db3',
  ],
  django: ['djt'],
  docker: ['dockerfile', 'dockerignore'],
  dotenv: ['env'],
  dts: ['d.ts', 'd.cts', 'd.mts'],
  elixir: ['ex', 'exs', 'eex', 'leex', 'heex'],
  elm: ['elm'],
  erlang: ['erl'],
  fsharp: ['fs', 'fsx', 'fsi', 'fsproj'],
  graphql: ['graphql', 'gql'],
  groovy: ['groovy'],
  h: ['h'],
  handlebars: ['hbs', 'mustache'],
  haskell: ['hs'],
  hpp: ['hh', 'hpp', 'hxx', 'h++', 'hp', 'tcc', 'inl'],
  html: ['htm', 'xhtml', 'html_vm', 'asp'],
  image: [
    'png',
    'jpeg',
    'jpg',
    'gif',
    'ico',
    'tif',
    'tiff',
    'psd',
    'psb',
    'ami',
    'apx',
    'avif',
    'bmp',
    'bpg',
    'brk',
    'cur',
    'dds',
    'dng',
    'exr',
    'fpx',
    'gbr',
    'img',
    'jbig2',
    'jb2',
    'jng',
    'jxr',
    'pgf',
    'pic',
    'raw',
    'webp',
    'eps',
    'afphoto',
    'ase',
    'aseprite',
    'clip',
    'cpt',
    'heif',
    'heic',
    'kra',
    'mdp',
    'ora',
    'pdn',
    'reb',
    'sai',
    'tga',
    'xcf',
    'jfif',
    'ppm',
    'pbm',
    'pgm',
    'pnm',
  ],
  java: ['java', 'jsp', 'class'],
  js: ['esx', 'cjs'],
  js_config: ['jsconfig.json'],
  json: ['json', 'jsonc', 'json5', 'jsonl'],
  julia: ['jl'],
  jupyter: ['ipynb'],
  key: ['pub', 'key', 'pem', 'asc', 'gpg', 'passwd'],
  lib: ['lib', 'bib', 'dll', 'dlc'],
  log: ['log'],
  lua: ['lua'],
  mapjs: ['js.map', 'cjs.map', 'mjs.map'],
  markdown: ['md', 'markdown'],
  mdx: ['mdx'],
  nginx: ['nginx', 'nginxconfig'],
  pdf: ['pdf'],
  perl: ['pm', 'raku'],
  powershell: ['ps1', 'psm1', 'psd1', 'ps1xml', 'psc1', 'pssc'],
  properties: [
    'ini',
    'dlc',
    'dll',
    'config',
    'conf',
    'properties',
    'prop',
    'settings',
    'option',
    'props',
    'cfg',
    'prefs',
  ],
  pug: ['jade', 'pug'],
  python: ['py', 'pyc', 'pyo', 'pyd'],
  r: ['r', 'rmd'],
  razor: ['cshtml', 'vbhtml'],
  reason: ['re', 'rei'],
  rescript: ['res', 'resi'],
  ruby: ['rb', 'erb'],
  ruby_gem: ['gemfile'],
  rust: ['rs', 'ron'],
  sass: ['scss', 'sass'],
  shader: [
    'glsl',
    'vert',
    'tesc',
    'tese',
    'geom',
    'frag',
    'comp',
    'vert.glsl',
    'tesc.glsl',
    'tese.glsl',
    'geom.glsl',
    'frag.glsl',
    'comp.glsl',
    'vertex.glsl',
    'geometry.glsl',
    'fragment.glsl',
    'compute.glsl',
    'ts.glsl',
    'gs.glsl',
    'vs.glsl',
    'fs.glsl',
    'shader',
    'vertexshader',
    'fragmentshader',
    'geometryshader',
    'computeshader',
    'hlsl',
    'pixel.hlsl',
    'geometry.hlsl',
    'compute.hlsl',
    'tessellation.hlsl',
    'px.hlsl',
    'geom.hlsl',
    'comp.hlsl',
    'tess.hlsl',
    'wgsl',
  ],
  spreadsheet: ['xlsx', 'xlsm', 'xls', 'csv', 'tsv', 'psv', 'ods'],
  storybook: ['story.js', 'story.ts', 'stories.js', 'stories.ts'],
  storybook_svelte: ['story.svelte', 'stories.svelte'],
  storybook_vue: ['story.vue', 'stories.vue'],
  svelte: ['svelte'],
  svg: ['svg'],
  swift: ['swift'],
  test_js: [
    'spec.js',
    'spec.cjs',
    'spec.mjs',
    'e2e-spec.js',
    'e2e-spec.cjs',
    'e2e-spec.mjs',
    'test.js',
    'test.cjs',
    'test.mjs',
    'js.snap',
    'cy.js',
    'spec.jsx',
    'test.jsx',
    'jsx.snap',
    'cy.jsx',
  ],
  test_ts: [
    'spec.ts',
    'spec.cts',
    'spec.mts',
    'cy.ts',
    'e2e-spec.ts',
    'e2e-spec.cts',
    'e2e-spec.mts',
    'test.ts',
    'test.cts',
    'test.mts',
    'ts.snap',
    'spec.tsx',
    'test.tsx',
    'tsx.snap',
    'cy.tsx',
  ],
  tex: ['tex', 'sty', 'dtx', 'ltx'],
  text: ['txt'],
  toml: ['toml'],
  ts_config: ['tsconfig.json'],
  unity: ['unity'],
  vlang: ['v'],
  vscode: ['vscodeignore', 'vsixmanifest', 'vsix', 'code-workspace'],
  vstudio: [
    'csproj',
    'ruleset',
    'sln',
    'suo',
    'vb',
    'vbs',
    'vcxitems',
    'vcxitems.filters',
    'vcxproj',
    'vcxproj.filters',
  ],
  workflow: ['workflows/yml', 'workflows/yaml'],
  xml: [
    'xml',
    'plist',
    'xsd',
    'dtd',
    'xsl',
    'xslt',
    'resx',
    'iml',
    'xquery',
    'tmLanguage',
    'manifest',
    'project',
    'xml.dist',
    'xml.dist.sample',
    'dmn',
  ],
  yaml: ['yml', 'yaml'],
}
